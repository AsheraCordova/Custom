//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: D:\Java\git\core-widget_library\CustomPlugin\src\main\java\com\ashera\custom\CustomEventCommand.java
//

#include "CustomEventCommand.h"
#include "EventExpressionParser.h"
#include "IOSObjectArray.h"
#include "IWidget.h"
#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/util/Map.h"


@implementation ASCustomEventCommand

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ASCustomEventCommand_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)executeCommandWithASIWidget:(id<ASIWidget>)widget
                  withJavaUtilMap:(id<JavaUtilMap>)eventObject
                withNSObjectArray:(IOSObjectArray *)params {
  NSString *event = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(eventObject)) getWithId:ASEventExpressionParser_KEY_SCRIPT_NAME], [NSString class]);
  switch (JreIndexOfStr(event, (id[]){ @"onPageScrolled", @"onDrawerSlide" }, 2)) {
    case 0:
    {
      jint numPages = 10;
      id<ASIWidget> motionLayout = [((id<ASIWidget>) nil_chk(widget)) findNearestViewWithNSString:@"@+id/header"];
      jint position = [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(params), 0), [JavaLangInteger class]))) intValue];
      jfloat positionOffset = [((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(IOSObjectArray_Get(params, 1), [JavaLangFloat class]))) floatValue];
      jfloat progress = (position + positionOffset) / (numPages - 1);
      [((id<ASIWidget>) nil_chk(motionLayout)) setAttributeWithNSString:@"progress" withId:JavaLangFloat_valueOfWithFloat_(progress) withBoolean:true];
      break;
    }
    case 1:
    {
      id<ASIWidget> motionLayout = [((id<ASIWidget>) nil_chk(widget)) findWidgetByIdWithNSString:@"@+id/motioncontent"];
      jfloat slideOffset = [((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(IOSObjectArray_Get(nil_chk(params), 1), [JavaLangFloat class]))) floatValue];
      [((id<ASIWidget>) nil_chk(motionLayout)) setAttributeWithNSString:@"progress" withId:JavaLangFloat_valueOfWithFloat_(slideOffset) withBoolean:true];
      id<ASIWidget> drawerlayout = [widget findWidgetByIdWithNSString:@"@+id/drawerlayoutstart"];
      [((id<ASIWidget>) nil_chk(drawerlayout)) setAttributeWithNSString:@"progress" withId:JavaLangFloat_valueOfWithFloat_(slideOffset) withBoolean:true];
      break;
    }
  }
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(executeCommandWithASIWidget:withJavaUtilMap:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "executeCommand", "LASIWidget;LJavaUtilMap;[LNSObject;", "(Lcom/ashera/widget/IWidget;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;[Ljava/lang/Object;)Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ASCustomEventCommand = { "CustomEventCommand", "com.ashera.custom", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_ASCustomEventCommand;
}

@end

void ASCustomEventCommand_init(ASCustomEventCommand *self) {
  NSObject_init(self);
}

ASCustomEventCommand *new_ASCustomEventCommand_init() {
  J2OBJC_NEW_IMPL(ASCustomEventCommand, init)
}

ASCustomEventCommand *create_ASCustomEventCommand_init() {
  J2OBJC_CREATE_IMPL(ASCustomEventCommand, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ASCustomEventCommand)
